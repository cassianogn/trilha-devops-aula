trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: 'trilha-devops'             # contém STORAGE_KEY (secret)

- name: ENV
  value: 'dev'
- name: TF_WORKDIR
  value: '$(System.DefaultWorkingDirectory)/terraform'
- name: TFVARS_PATH
  value: 'envs/$(ENV).tfvars'        # relativo ao TF_WORKDIR
- name: STATE_CONTAINER
  value: 'dev'                       # <<< fixo
- name: STATE_KEY
  value: 'envs/$(ENV)/terraform.tfstate'

steps:
- checkout: self

- task: TerraformInstaller@1
  inputs:
    terraformVersion: '1.6.6'

# INIT (backend via access key)
- task: TerraformTask@5
  displayName: 'Terraform init (access key)'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(TF_WORKDIR)'
    backendServiceArm: 'subcription laboratorio'
    backendAzureRmResourceGroupName: 'laboratorio'
    backendAzureRmStorageAccountName: 'aulasluis'
    backendAzureRmContainerName: '$(STATE_CONTAINER)'   # -> dev
    backendAzureRmKey: '$(STATE_KEY)'
    commandOptions: >
      -backend-config=access_key=$(STORAGE_KEY)
      -upgrade

- task: AzureCLI@2
  displayName: 'Terraform plan (OIDC via ARM_*)'
  inputs:
    azureSubscription: 'subcription laboratorio'   # mesma SC do init
    addSpnToEnvironment: true
    scriptType: bash
    workingDirectory: '$(TF_WORKDIR)'
    scriptLocation: inlineScript
    inlineScript: |
      set -e
      # credenciais para o provider azurerm (OIDC)
      export ARM_CLIENT_ID="$servicePrincipalId"
      export ARM_TENANT_ID="$tenantId"
      export ARM_SUBSCRIPTION_ID="$(az account show --query id -o tsv)"
      export ARM_USE_OIDC=true
      export ARM_OIDC_TOKEN_FILE="${AZURE_FEDERATED_TOKEN_FILE}"
      # opcional: se os providers já estão registrados
      # export ARM_SKIP_PROVIDER_REGISTRATION=true

      terraform providers
      terraform plan \
        -var-file="$(TFVARS_PATH)" \
        -input=false \
        -out=tfplan \
        -detailed-exitcode

# APPLY consumindo o plano
- task: AzureCLI@2
  displayName: 'Terraform apply (OIDC via ARM_*)'
  inputs:
    azureSubscription: 'subcription laboratorio'
    addSpnToEnvironment: true
    scriptType: bash
    workingDirectory: '$(TF_WORKDIR)'
    scriptLocation: inlineScript
    inlineScript: |
      set -e
      export ARM_CLIENT_ID="$servicePrincipalId"
      export ARM_TENANT_ID="$tenantId"
      export ARM_SUBSCRIPTION_ID="$(az account show --query id -o tsv)"
      export ARM_USE_OIDC=true
      export ARM_OIDC_TOKEN_FILE="${AZURE_FEDERATED_TOKEN_FILE}"

      terraform apply -input=false -auto-approve tfplan