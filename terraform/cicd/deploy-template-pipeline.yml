parameters:
- name: envs
  type: object

stages:
- ${{ each env in parameters.envs }}:
  - stage: terraform_pr_${{env.name}}
    displayName: terraform Pr ${{env.name}}
    pool:
      vmImage: ubuntu-latest
    jobs:
      - deployment: terraform_pr_${{env.name}}
        environment: ${{env.name}}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: TerraformInstaller@1
                  inputs:
                    terraformVersion: "latest"
                - task: TerraformTask@5
                  displayName: Init
                  inputs:
                    provider: "azurerm"
                    command: "init"
                    workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
                    backendServiceArm: "Azure subscription 1(093ea378-3099-4ff4-b2ec-b80dc1c14243)"
                    backendAzureRmStorageAccountName: "aulasluis"
                    backendAzureRmContainerName: "${{env.name}}"
                    backendAzureRmKey: "envs/${{env.name}}/terraform.tfstate"
                - task: TerraformTask@5
                  displayName: Plan
                  inputs:
                    provider: "azurerm"
                    command: "plan"
                    workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
                    environmentServiceNameAzureRM: "Azure subscription 1(093ea378-3099-4ff4-b2ec-b80dc1c14243)"
                
                - ${{ if eq(env.apply, true) }}:
                  - task: TerraformTask@5
                    displayName: Apply
                    inputs:
                      provider: 'azurerm'
                      command: 'apply'
                      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
                      environmentServiceNameAzureRM: 'Azure subscription 1(093ea378-3099-4ff4-b2ec-b80dc1c14243)'
