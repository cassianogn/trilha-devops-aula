parameters:
  - name: image_name
    type: string
  - name: dockerfile
    type: string  
  - name: release_name
    type: string
  - name: chart_path
    type: string
  - name: values_file
    type: string
  - name: envs
    type: object

stages:
  - stage: build
    displayName: Build
    pool:
      vmImage: "ubuntu-latest"
    jobs:
      - job: build
        displayName: Build
        steps:
          - checkout: self
            fetchDepth: 0
          - script: |
              docker version
              helm version || true
            displayName: "Tools info"

          - task: Docker@2
            displayName: "Docker build & push (${{parameters.image_name}}:$(Build.BuildId) , latest)"
            inputs:
              containerRegistry: "luis-acr"
              repository: "${{parameters.image_name}}"
              command: "buildAndPush"
              Dockerfile: "${{parameters.dockerfile}}"
              buildContext: "."
              tags: |
                $(Build.BuildId)
                latest
  - ${{ each env in parameters.envs }}:              
    - stage: deploy_${{env}}
      displayName: Deploy ${{env}}
      pool:
        vmImage: "ubuntu-latest"
      jobs:
        - deployment: deploy_${{env}}
          displayName: Deploy ${{env}}
          environment: ${{env}}
          strategy: 
            runOnce:
              deploy:
                steps:
                  - task: HelmInstaller@1
                    displayName: "Install Helm 3"
                    inputs:
                      helmVersionToInstall: "3.13.3"

                  - task: HelmDeploy@0
                    displayName: "Helm upgrade --install (${{parameters.release_name}}) -> ${{env}}"
                    inputs:
                      connectionType: "Kubernetes Service Connection"
                      kubernetesServiceConnection: "luis-aks-dev"
                      namespace: "${{env}}"
                      command: "upgrade"
                      chartType: "FilePath"
                      chartPath: "${{parameters.chart_path}}"
                      releaseName: "${{parameters.release_name}}"
                      install: true
                      valueFile: "${{parameters.values_file}}"
                      arguments: >
                        --set image.repository=luistickts.azurecr.io/${{parameters.image_name}}
                        --set image.tag=$(Build.BuildId)
